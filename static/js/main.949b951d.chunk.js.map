{"version":3,"sources":["main.js","quiz.js","admin.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","history","useHistory","useState","quiznames","setQuiznames","numberquestions","setnumberquestions","categories","setCategories","difficulties","setDifficulties","id","setId","success","setSuccess","local","setLocal","loading","setLoading","quizname","numberquestion","category","Difficulty","a","firebase","firestore","collection","add","then","docRef","localStorage","setItem","JSON","stringify","name","class","useEffect","myName","getItem","parse","push","className","sx","fontSize","color","padding","TextField","m","width","label","onChange","val","target","value","required","select","MenuItem","onClick","addData","map","item","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Quiz","useParams","iddata","setIddata","score","setScore","setName","quizClass","setQuizClass","email","setEmail","data","setdata","quizpage","setQuizpage","undefined","navigator","share","window","location","protocol","replace","href","doc","get","fetch","res","json","datas","results","adddata","quizclass","handleOnSubmit","title","text","url","origin","alert","variant","number","Math","floor","random","question","includes","RadioGroup","correct_answer","prev","incorrect_answers","ite","index","FormControlLabel","control","Radio","Admin","idData","setIdData","maindata","setMaindata","back","setBack","quiz","setQuiz","orderBy","startAt","forEach","each","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","white","body","StyledTableRow","TableRow","action","hover","border","TableContainer","component","Paper","Table","minWidth","TableHead","TableBody","scope","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.949b951d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TextField, MenuItem } from \"@mui/material\";\r\nimport LoopIcon from \"@mui/icons-material/Loop\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyAMO2sUNzINlbGLTlViWXK3V0NPW8xBPcM\",\r\n        authDomain: \"ecommerce-project-d81cf.firebaseapp.com\",\r\n        projectId: \"ecommerce-project-d81cf\",\r\n        storageBucket: \"ecommerce-project-d81cf.appspot.com\",\r\n        messagingSenderId: \"668329592221\",\r\n        appId: \"1:668329592221:web:3cee420b9354852fc41b74\",\r\n        measurementId: \"G-E0N2SQ0B5W\"\r\n    });\r\n} else {\r\n    firebase.app();\r\n}\r\n\r\nexport default function Main(props) {\r\n    const history = useHistory();\r\n    const [quiznames, setQuiznames] = useState(\"\");\r\n    const [numberquestions, setnumberquestions] = useState(0);\r\n    const [categories, setCategories] = useState(9);\r\n    const [difficulties, setDifficulties] = useState();\r\n    const [id, setId] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const [local, setLocal] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let myName = localStorage.getItem(\"quiz\");\r\n        setLocal(JSON.parse(myName));\r\n    }, []);\r\n\r\n    if (success) {\r\n        history.push(id);\r\n    }\r\n\r\n    async function addData(quizname, numberquestion, category, Difficulty) {\r\n        setLoading(true);\r\n        await firebase\r\n            .firestore()\r\n            .collection(\"quiz\")\r\n            .add({\r\n                quizname: quizname,\r\n                numberquestion: numberquestion,\r\n                category: category,\r\n                Difficulty: Difficulty\r\n            })\r\n            .then(function (docRef) {\r\n                setId(\"/\" + docRef.id);\r\n                localStorage.setItem(\r\n                    \"quiz\",\r\n                    local\r\n                        ? JSON.stringify([...local, { name: quizname, class: docRef.id }])\r\n                        : JSON.stringify([{ name: quizname, class: docRef.id }])\r\n                );\r\n            })\r\n            .then(() => setLoading(false))\r\n            .then(() => setSuccess(true));\r\n    }\r\n\r\n    return loading ? (\r\n        <div className=\"loading\">\r\n            <LoopIcon sx={{ fontSize: 50, color: \"#000000\", padding: 10 }} />\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <div className=\"main_header\">\r\n                <h3>QUIZZER</h3>\r\n            </div>\r\n            <div className=\"qoute\">\r\n                <h2>\"MAKE YOUR STUDENTS PREPARED FOR COMPETITIONS\"</h2>\r\n            </div>\r\n            <div>\r\n                <div className=\"register_box\">\r\n                    <h3>Create Quiz</h3>\r\n                    <form className=\"textinput\">\r\n                        <TextField\r\n                            sx={{ m: 1, width: \"35ch\" }}\r\n                            label=\"name of the quiz\"\r\n                            onChange={(val) => setQuiznames(val.target.value)}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            sx={{ m: 1, width: \"35ch\" }}\r\n                            label=\"Number of Question\"\r\n                            onChange={(val) => setnumberquestions(val.target.value)}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-select-currency\"\r\n                            select\r\n                            label=\"Category\"\r\n                            value={categories}\r\n                            onChange={(val) => setCategories(val.target.value)}\r\n                            sx={{ m: 1, width: \"35ch\" }}\r\n                        >\r\n                            <MenuItem value={9}>General Knowledge</MenuItem>\r\n                            <MenuItem value={17}>Science and Nature</MenuItem>\\\r\n                            <MenuItem value={18}>Computer Science</MenuItem>\r\n                            <MenuItem value={19}>Mathematics</MenuItem>\r\n                            <MenuItem value={24}>Politics</MenuItem>\r\n                            <MenuItem value={21}>Sports</MenuItem>\r\n                        </TextField>\r\n                        <TextField\r\n                            id=\"standard-select-currency\"\r\n                            select\r\n                            label=\"Difficulty\"\r\n                            value={difficulties}\r\n                            onChange={(val) => setDifficulties(val.target.value)}\r\n                            sx={{ m: 1, width: \"35ch\" }}\r\n                        >\r\n                            <MenuItem value=\"easy\">Easy</MenuItem>\r\n                            <MenuItem value=\"medium\">Medium</MenuItem>\r\n                            <MenuItem value=\"hard\">Hard</MenuItem>\r\n                        </TextField>\r\n                    </form>\r\n                    <button\r\n                        className=\"submit\"\r\n                        onClick={() =>\r\n                            addData(quiznames, numberquestions, categories, difficulties)\r\n                        }\r\n                    >\r\n                        Start\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"quizes\">\r\n                <h3>Your Quiz</h3>\r\n                <div className=\"box\">\r\n                    {local ? (\r\n                        local.map((item) => (\r\n                            <div\r\n                                className=\"list\"\r\n                                onClick={async () => {\r\n                                    setId(\"/admin/\" + item.class);\r\n                                    setSuccess(true);\r\n                                }}\r\n                            >\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"client\">\r\n                            <h2>No Quiz Created</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <h2>Organised by VAR</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport LoopIcon from \"@mui/icons-material/Loop\";\r\n\r\nexport default function Quiz() {\r\n    const { id } = useParams();\r\n    const [iddata, setIddata] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [quizClass, setQuizClass] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [data, setdata] = useState([]);\r\n    const [quizpage, setQuizpage] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (navigator.share === undefined) {\r\n            if (window.location.protocol === \"http:\") {\r\n                window.location.replace(\r\n                    window.location.href.replace(/^http:/, \"https:\")\r\n                );\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            await firebase\r\n                .firestore()\r\n                .collection(\"quiz\")\r\n                .doc(id)\r\n                .get()\r\n                .then(async (data) => {\r\n                    setIddata(data.data());\r\n                    const res = await fetch(\r\n                        `https://opentdb.com/api.php?amount=${data.data().numberquestion\r\n                        }&category=${data.data().category}&difficulty=${data.data().Difficulty\r\n                        }&type=multiple`\r\n                    );\r\n                    const datas = await res.json();\r\n                    setdata(datas.results);\r\n                });\r\n        })();\r\n    }, []);\r\n\r\n    const adddata = async (name, quizclass, email, score) => {\r\n        setLoading(true);\r\n        await firebase\r\n            .firestore()\r\n            .collection(\"quiz\")\r\n            .doc(id)\r\n            .collection(\"scores\")\r\n            .add({\r\n                name: name,\r\n                class: quizclass,\r\n                email: email,\r\n                score: score\r\n            })\r\n            .then(() => setQuizpage(false))\r\n            .then(() => setLoading(false));\r\n    };\r\n\r\n    const handleOnSubmit = async () => {\r\n        if (navigator.share) {\r\n            await navigator.share({\r\n                title: iddata.quizname,\r\n                text: `\r\n      ${name} scored ${score}/10 in ${iddata.quizname} and I advice you all to participate in it by clicking the link given below\r\n      `,\r\n                url: `${window.location.origin}/${id}`\r\n            });\r\n        } else {\r\n            alert(`Your system does not support sharing files.`);\r\n        }\r\n    };\r\n\r\n    return loading ? (\r\n        <div className=\"loading\">\r\n            <LoopIcon sx={{ fontSize: 50, color: \"#000000\", padding: 10 }} />\r\n        </div>\r\n    ) : quizpage ? (\r\n        <div className=\"bodyquiz\">\r\n            <div className=\"header\">\r\n                <h3>{iddata.quizname}</h3>\r\n            </div>\r\n            <div className=\"questionbox1\">\r\n                <h3>Name</h3>\r\n                <TextField\r\n                    sx={{ width: \"30ch\" }}\r\n                    id=\"standard-basic\"\r\n                    label=\"Name\"\r\n                    onChange={(val) => setName(val.target.value)}\r\n                    variant=\"standard\"\r\n                />\r\n            </div>\r\n            <div className=\"questionbox\">\r\n                <h3>Class</h3>\r\n                <TextField\r\n                    onChange={(val) => setQuizClass(val.target.value)}\r\n                    sx={{ width: \"30ch\" }}\r\n                    id=\"standard-basic\"\r\n                    label=\"Class\"\r\n                    variant=\"standard\"\r\n                />\r\n            </div>\r\n            <div className=\"questionbox\">\r\n                <h3>Email</h3>\r\n                <TextField\r\n                    onChange={(val) => setEmail(val.target.value)}\r\n                    sx={{ width: \"30ch\" }}\r\n                    id=\"standard-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"standard\"\r\n                />\r\n            </div>\r\n            {data.map((item) => {\r\n                let number = Math.floor(Math.random() * 3);\r\n                return (\r\n                    <div key={item.question} className=\"questionbox\">\r\n                        <h3>\r\n                            {item.question.includes(\"&#039;\")\r\n                                ? item.question.replace(/&#039;/g, \" \")\r\n                                : item.question.includes(\"&quot;\")\r\n                                    ? item.question.replace(/&quot;/g, \" \")\r\n                                    : item.question.includes(\"&ldquo;\")\r\n                                        ? item.question.replace(/&ldquo;/g, \" \")\r\n                                        : item.question.includes(\"&hellip;\")\r\n                                            ? item.question.replace(/&hellip;/g, \" \")\r\n                                            : item.question.includes(\"&rdquo;\")\r\n                                                ? item.question.replace(/&rdquo;/g, \" \")\r\n                                                : item.question.includes(\"&amp;\")\r\n                                                    ? item.question.replace(/&amp;/g, \" \")\r\n                                                    : item.question}\r\n                        </h3>\r\n                        <RadioGroup\r\n                            onChange={(val) => {\r\n                                if (val.target.value === item.correct_answer) {\r\n                                    setScore((prev) => prev + 1);\r\n                                }\r\n                            }}\r\n                            name=\"radio-buttons-group\"\r\n                        >\r\n                            {item.incorrect_answers.map((ite, index) =>\r\n                                index === number ? (\r\n                                    <>\r\n                                        <FormControlLabel\r\n                                            value={item.correct_answer}\r\n                                            control={<Radio />}\r\n                                            label={\r\n                                                item.correct_answer.includes(\"&#039;\")\r\n                                                    ? item.correct_answer.replace(/&#039;/g, \" \")\r\n                                                    : item.correct_answer.includes(\"&quot;\")\r\n                                                        ? item.correct_answer.replace(/&quot;/g, \" \")\r\n                                                        : item.correct_answer.includes(\"&ldquo;\")\r\n                                                            ? item.correct_answer.replace(/&ldquo;/g, \" \")\r\n                                                            : item.correct_answer.includes(\"&hellip;\")\r\n                                                                ? item.correct_answer.replace(/&hellip;/g, \" \")\r\n                                                                : item.correct_answer.includes(\"&rdquo;\")\r\n                                                                    ? item.correct_answer.replace(/&rdquo;/g, \" \")\r\n                                                                    : item.correct_answer.includes(\"&amp;\")\r\n                                                                        ? item.correct_answer.replace(/&amp;/g, \" \")\r\n                                                                        : item.correct_answer\r\n                                            }\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={ite}\r\n                                            control={<Radio />}\r\n                                            label={\r\n                                                ite.includes(\"&#039;\")\r\n                                                    ? ite.replace(/&#039;/g, \" \")\r\n                                                    : ite.includes(\"&quot;\")\r\n                                                        ? ite.replace(/&quot;/g, \" \")\r\n                                                        : ite.includes(\"&ldquo;\")\r\n                                                            ? ite.replace(/&ldquo;/g, \" \")\r\n                                                            : ite.includes(\"&hellip;\")\r\n                                                                ? ite.replace(/&hellip;/g, \" \")\r\n                                                                : ite.includes(\"&rdquo;\")\r\n                                                                    ? ite.replace(/&rdquo;/g, \" \")\r\n                                                                    : ite.includes(\"&amp;\")\r\n                                                                        ? ite.replace(/&amp;/g, \" \")\r\n                                                                        : ite\r\n                                            }\r\n                                        />\r\n                                    </>\r\n                                ) : (\r\n                                    <FormControlLabel\r\n                                        value={ite}\r\n                                        control={<Radio />}\r\n                                        label={\r\n                                            ite.includes(\"&#039;\")\r\n                                                ? ite.replace(/&#039;/g, \" \")\r\n                                                : ite.includes(\"&quot;\")\r\n                                                    ? ite.replace(/&quot;/g, \" \")\r\n                                                    : ite.includes(\"&ldquo;\")\r\n                                                        ? ite.replace(/&ldquo;/g, \" \")\r\n                                                        : ite.includes(\"&hellip;\")\r\n                                                            ? ite.replace(/&hellip;/g, \" \")\r\n                                                            : ite.includes(\"&rdquo;\")\r\n                                                                ? ite.replace(/&rdquo;/g, \" \")\r\n                                                                : ite.includes(\"&amp;\")\r\n                                                                    ? ite.replace(/&amp;/g, \" \")\r\n                                                                    : ite\r\n                                        }\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </RadioGroup>\r\n                    </div>\r\n                );\r\n            })}\r\n            <div className=\"gridlayout\">\r\n                <div\r\n                    onClick={() => adddata(name, quizClass, email, score)}\r\n                    className=\"quiz_submit\"\r\n                >\r\n                    <h3>Submit</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"bodyquiz\">\r\n            <div className=\"questionbox\">\r\n                <div className=\"gridlayout\">\r\n                    <h3>{iddata.quizname}</h3>\r\n                    <h1>{score}/10</h1>\r\n                </div>\r\n            </div>\r\n            <div onClick={handleOnSubmit} className=\"share\">\r\n                <ShareIcon sx={{ fontSize: 35, color: \"#ffffff\" }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\n\r\nexport default function Admin() {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [idData, setIdData] = useState([]);\r\n    const [maindata, setMaindata] = useState(\"\");\r\n    const [back, setBack] = useState(false);\r\n    const [quiz, setQuiz] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (navigator.share === undefined) {\r\n            if (window.location.protocol === \"http:\") {\r\n                window.location.replace(\r\n                    window.location.href.replace(/^http:/, \"https:\")\r\n                );\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            await firebase\r\n                .firestore()\r\n                .collection(\"quiz\")\r\n                .doc(id)\r\n                .collection(\"scores\")\r\n                .orderBy(\"score\", \"desc\")\r\n                .startAt(\"name\")\r\n                .get()\r\n                .then((data) => {\r\n                    let datas = [];\r\n                    data.forEach((each) => {\r\n                        datas.push({ ...each.data() });\r\n                    });\r\n                    setIdData(datas);\r\n                });\r\n            await firebase\r\n                .firestore()\r\n                .collection(\"quiz\")\r\n                .doc(id)\r\n                .get()\r\n                .then((data) => {\r\n                    setMaindata(data.data().quizname);\r\n                });\r\n        })();\r\n    }, []);\r\n\r\n    if (back) {\r\n        history.push(\"/\");\r\n    }\r\n    if (quiz) {\r\n        history.push(`/${id}`);\r\n    }\r\n\r\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n        [`&.${tableCellClasses.head}`]: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white\r\n        },\r\n        [`&.${tableCellClasses.body}`]: {\r\n            fontSize: 14\r\n        }\r\n    }));\r\n\r\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        },\r\n        // hide last border\r\n        \"&:last-child td, &:last-child th\": {\r\n            border: 0\r\n        }\r\n    }));\r\n\r\n    const handleOnSubmit = async () => {\r\n        if (navigator.share) {\r\n            await navigator.share({\r\n                title: maindata,\r\n                text: `\r\n        Press the link given below and participate in ${maindata}\r\n        `,\r\n                url: `${window.location.origin}/${id}`\r\n            });\r\n        } else {\r\n            alert(`Your system does not support sharing files.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <div onClick={() => setBack(true)} className=\"back\">\r\n        <ArrowBackIcon sx={{ fontSize: 35, color: \"#ffffff\" }} />\r\n      </div> */}\r\n            <div className=\"adminheader\">\r\n                <div onClick={() => setBack(true)} className=\"back\">\r\n                    <ArrowBackIcon sx={{ fontSize: 35, color: \"#ffffff\" }} />\r\n                </div>\r\n                <h3>{maindata}</h3>\r\n            </div>\r\n            <div className=\"link\">\r\n                <h3>Quiz link</h3>\r\n                <div className=\"box\">\r\n                    <div className=\"box_link\" onClick={() => setQuiz(true)}>\r\n                        <h5>{`${window.location.origin}/${id}`}</h5>\r\n                    </div>\r\n                    <div className=\"share_link\">\r\n                        <ShareIcon\r\n                            onClick={() => handleOnSubmit()}\r\n                            sx={{ fontSize: 25, color: \"#ffffff\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"table\">\r\n                <h3>Results</h3>\r\n                <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 500 }} aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>Name</StyledTableCell>\r\n                                <StyledTableCell>Class</StyledTableCell>\r\n                                <StyledTableCell>Email</StyledTableCell>\r\n                                <StyledTableCell>Score</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {idData.map((item) => (\r\n                                <StyledTableRow key={item.name}>\r\n                                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                                        {item.name}\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell>{item.class}</StyledTableCell>\r\n                                    <StyledTableCell>{item.email}</StyledTableCell>\r\n                                    <StyledTableCell>{item.score}</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import \"./styles.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Main from \"./main\";\nimport Quiz from \"./quiz\";\nimport Admin from \"./admin\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function App() {\n  return (\n    <Router basename=\"/quizzers\" >\n      <Switch>\n        <Route exact path=\"/\">\n          <Main />\n        </Route>\n        <Route exact path=\"/:id\">\n          <Quiz />\n        </Route>\n        <Route path=\"/admin/:id\">\n          <Admin />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}